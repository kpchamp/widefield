mprof: Sampling memory every 0.1s
running as a Python program...
ntents
================================================
     8     59.6 MiB      0.0 MiB   @profile
     9                             def pcaEM(X, n_components, max_iters):
    10     59.6 MiB      0.0 MiB           n_samples,n_features = X.shape
    11     90.9 MiB     31.3 MiB           W = np.random.randn(n_features, n_components)
    12                             
    13     90.9 MiB      0.0 MiB           err = []
    14    198.7 MiB    107.8 MiB           for i in range(0, max_iters):
    15                                         # constrained algorithm
    16    198.7 MiB      0.0 MiB               Minv = la.lapack.flapack.dtrtri(np.tril(np.dot(W.T,W)).T)[0].T
    17    198.7 MiB      0.0 MiB               XW = np.dot(X,W)
    18    198.7 MiB      0.0 MiB               Z = np.dot(Minv, XW.T)
    19    198.7 MiB      0.0 MiB               ZZt = np.triu(np.dot(Z,Z.T))
    20    196.8 MiB     -1.9 MiB               SW = np.dot(X.T, XW)
    21    169.5 MiB    -27.3 MiB               W = np.dot(SW, np.dot(Minv.T, la.lapack.flapack.dtrtri(ZZt)[0]))
    22                             
    23    198.7 MiB     29.2 MiB               err.append(la.norm(X.T - np.dot(W, Z)))
    24    198.7 MiB      0.0 MiB               if i > 0 and np.abs(err[i] - err[i-1]) < 1e-6:
    25                                             break
    26                             
    27    134.3 MiB    -64.3 MiB           return W


